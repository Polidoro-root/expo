{"version":3,"file":"Clipboard.types.js","sourceRoot":"","sources":["../src/Clipboard.types.ts"],"names":[],"mappings":"AAyCA,MAAM,CAAN,IAAY,YAGX;AAHD,WAAY,YAAY;IACtB,wCAAwB,CAAA;IACxB,6BAAa,CAAA;AACf,CAAC,EAHW,YAAY,KAAZ,YAAY,QAGvB","sourcesContent":["// @needsAudit\nexport interface GetImageOptions {\n  /**\n   * The format of the clipboard image to be converted to.\n   */\n  format: 'png' | 'jpeg';\n  /**\n   * Specify the quality of the returned image, between `0` and `1`. Defaults to `1` (highest quality).\n   * Applicable only when `format` is set to `jpeg`, ignored otherwise.\n   * @default 1\n   */\n  jpegQuality?: number;\n}\n\n// @needsAudit\nexport interface ClipboardImage {\n  /**\n   * A Base64-encoded string of the image data.\n   * Its format is dependent on the `format` option.\n   *\n   * > **NOTE:** The string is already prepended with `data:image/png;base64,` or `data:image/jpeg;base64,` prefix.\n   *\n   * You can use it directly as the source of an `Image` element.\n   * @example\n   * ```ts\n   * <Image\n   *   source={{ uri: clipboardImage.data }}\n   *   style={{ width: 200, height: 200 }}\n   * />\n   * ```\n   */\n  data: string;\n  /**\n   * Dimensions (`width` and `height`) of the image pasted from clipboard.\n   */\n  size: {\n    width: number;\n    height: number;\n  };\n}\n\nexport enum StringFormat {\n  PLAIN_TEXT = 'plainText',\n  HTML = 'html',\n}\n\nexport interface GetStringOptions {\n  /**\n   * The target format of the clipboard string to be converted to, if possible.\n   * Defaults to plain text.\n   *\n   * On web, this option is ignored. The string is always returned without any conversion.\n   *\n   * @default `StringFormat.PLAIN_TEXT`\n   */\n  preferredFormat?: StringFormat;\n}\n\nexport interface SetStringOptions {\n  /**\n   * The input format of the provided string. Setting this helps other apps\n   * to better interpret the copied string contents. Defaults to plain text.\n   *\n   * On web, this option is ignored. The string will be copied directly as-is, without any conversion.\n   *\n   * @default `StringFormat.PLAIN_TEXT`\n   */\n  inputFormat?: StringFormat;\n}\n"]}